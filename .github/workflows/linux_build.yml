name: Build Release
run-name: Build Release by ${{ github.actor }}
on: 
  release:
    types: [ published ]
jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { arch: x86_64, platform: linux/amd64 }
          - { arch: aarch64, platform: linux/arm64 }
#     container:
#       image: wyzdwdz/appimage-ubuntu18.04
#       options:
#         --platform ${{ matrix.platform }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: run Docker container
        uses: addnab/docker-run-action@v3
        with:
          image: wyzdwdz/appimage-ubuntu18.04
          options: -v ${{ github.workspace }}:/var/www --platform ${{ matrix.platform }}
      
      - name: build executable binary
        run: ./build.sh

      - name: build AppImage
        run: |
          linuxdeploy --appdir=./AppDir -e ./install/bin/assfonts -d ./src/resources/assfonts.desktop -i ./src/resources/icon.png --icon-filename=assfonts
          appimagetool ./AppDir assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Linux.AppImage

      - name: upload AppImages
        uses: actions/upload-artifact@v3
        with:
          name: release-appimage-${{ matrix.arch }}
          path: assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Linux.AppImage
          if-no-files-found: error

  build-windows:
    runs-on: windows-2019
    steps:
      - name: install msvc
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: install cmake
        uses: lukka/get-cmake@latest

      - name: install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.4
      
      - name: checkout
        uses: actions/checkout@v3

      - name: build executable binary
        run: .\build.bat

      - name: copy and rename
        run: echo f | xcopy /f /y .\install\bin\assfonts.exe assfonts-${{ github.ref_name }}-x86_64-Windows.exe

      - name: upx compress
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: assfonts-${{ github.ref_name }}-x86_64-Windows.exe
          args: -fq9

      - name: upload exe
        uses: actions/upload-artifact@v3
        with:
          name: release-exe-x86_64
          path: assfonts-${{ github.ref_name }}-x86_64-Windows.exe
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [ build-linux, build-windows ]
    steps:
      - name: download AppImages x86_64
        uses: actions/download-artifact@v3
        with:
          name: release-appimage-x86_64
          
      - name: download AppImages aarch64
        uses: actions/download-artifact@v3
        with:
          name: release-appimage-aarch64

      - name: download exe
        uses: actions/download-artifact@v3
        with:
          name: release-exe-x86_64

      - name: calculate hash
        run: |
          sha256sum assfonts-${{ github.ref_name }}-x86_64-Linux.AppImage > assfonts-${{ github.ref_name }}-x86_64-Linux.AppImage.sha256sum
          sha256sum assfonts-${{ github.ref_name }}-aarch64-Linux.AppImage > assfonts-${{ github.ref_name }}-aarch64-Linux.AppImage.sha256sum
          sha256sum assfonts-${{ github.ref_name }}-x86_64-Windows.exe > assfonts-${{ github.ref_name }}-x86_64-Windows.exe.sha256sum

      - name: edit release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: assfonts-${{ github.ref_name }}-*
          tag: ${{ github.ref }}
          overwrite: false
          file_glob: true
