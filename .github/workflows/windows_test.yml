name: Windows Test
run-name: Windows Test by ${{ github.actor }}
on: push
jobs:
  build-windows:
    runs-on: windows-2022
    defaults:
        run:
          shell: bash
    strategy:
        matrix:
          include:
            #- { arch: x86_64, profile: x86_64 }
            - { arch: aarch64, profile: armv8 }
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: restore conan cache
        uses: actions/cache/restore@v3
        with:
            path: .conan2/p
            key: conan2-windows-${{ matrix.arch }}
            restore-keys: |
              conan2-windows-${{ matrix.arch }}

      - name: x86_64 install msvc
        if: ${{ matrix.arch == 'x86_64' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
            arch: x64

      - name: arm64 install msvc
        if: ${{ matrix.arch == 'aarch64' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
            arch: amd64_arm64

      - name: install cmake
        uses: lukka/get-cmake@latest

      - name: install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
            version: 2.0.4

      - name: set CONAN_HOME
        run: echo "CONAN_HOME=${{ github.workspace }}/.conan2" >> "$GITHUB_ENV"

      - name: aarch64 fix conan recipes
        if: ${{ matrix.arch == 'aarch64' }}
        run: |
            conan export .github/recipes/libffi_fix -nr --version 3.4.4
            conan export .github/recipes/libiconv_fix -nr --version 1.17

      - name: aarch64 add tools to PATH
        if: ${{ matrix.arch == 'aarch64' }}
        run: echo $(realpath .github/tools) >> $GITHUB_PATH

      - run: ls -a "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\14.36.32532\bin\HostX64\ARM64"

      - name: build executable binary
        run: |
            conan export --version 7.3.0 -nr 3rdparty/harfbuzz_expt
            conan config install .github/conan2-windows
            conan install . -b missing -pr:h ${{ matrix.profile }} -pr:b x86_64
            cd build
            ./conanbuild.bat
            cmake .. --preset conan-default
            cmake --build --preset conan-release -j
            cmake --install Release --prefix ../install
            cd ..

      - name: copy and rename
        run: cp -f ./install/bin/assfonts.exe assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Windows.exe

      - name: x86_64 upx compress
        if: ${{ matrix.arch == 'x86_64' }}
        uses: crazy-max/ghaction-upx@v2
        with:
            version: latest
            files: assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Windows.exe
            args: -fq9

      - name: upload exe
        uses: actions/upload-artifact@v3
        with:
            name: release-exe-${{ matrix.arch }}
            path: assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Windows.exe
            if-no-files-found: error

      - name: save conan cache
        uses: actions/cache/save@v3
        with:
            path: .conan2/p
            key: conan2-windows-${{ matrix.arch }}-${{ hashFiles('.conan2/p/cache.sqlite3') }}