name: Build Release
run-name: Build Release by ${{ github.actor }}
on: 
  release:
    types: [ published ]
jobs:
  build-linux:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - { arch: x86_64 }
          - { arch: aarch64 }
    steps:
      - name: checkout
        uses: actions/checkout@v3
        
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: x86_64 build binary and appimage
        if: ${{ matrix.arch == 'x86_64' }}
        uses: addnab/docker-run-action@v3
        with:
          image: wyzdwdz/appimage-ubuntu18.04
          options: -v ${{ github.workspace }}:/var/www --platform linux/amd64
          shell: bash
          run: |
            cd /var/www
            apt -y install lld-10
            update-alternatives --install /usr/bin/ld ld /usr/lib/llvm-10/bin/lld 10
            conan config install .github/conan2-linux
            conan install . -b missing -pr:h x86_64 -pr:b x86_64
            cd build
            source conanbuild.sh
            cmake .. --preset conan-release
            cmake --build --preset conan-release -j
            cmake --install Release --prefix ../install --strip
            cd ..
            linuxdeploy --appdir=./AppDir -e ./install/bin/assfonts -d ./src/resources/assfonts.desktop -i ./src/resources/icon.png --icon-filename=assfonts
            appimagetool ./AppDir assfonts-${{ github.ref_name }}-x86_64-Linux.AppImage

      - name: aarch64 build binary
        if: ${{ matrix.arch == 'aarch64' }}
        uses: addnab/docker-run-action@v3
        with:
          image: wyzdwdz/appimage-ubuntu18.04
          options: -v ${{ github.workspace }}:/var/www --platform linux/amd64
          shell: bash
          run: |
            cd /var/www
            apt -y install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu lld-10
            update-alternatives --install /usr/bin/ld ld /usr/lib/llvm-10/bin/lld 10
            cp -f .github/apt-lists/amd64-sources.list /etc/apt/sources.list
            cp -f .github/apt-lists/arm64-sources.list /etc/apt/sources.list.d/
            dpkg --add-architecture arm64
            apt update
            export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig
            conan config install .github/conan2-linux
            conan install . -b missing -pr:h armv8 -pr:b x86_64
            cd build
            source conanbuild.sh
            cmake .. --preset conan-release
            cmake --build --preset conan-release -j
            cmake --install Release --prefix ../install --strip
            cd ..

      - name: aarch64 build appimage
        if: ${{ matrix.arch == 'aarch64' }}
        uses: addnab/docker-run-action@v3
        with:
          image: wyzdwdz/appimage-ubuntu18.04
          options: -v ${{ github.workspace }}:/var/www --platform linux/arm64
          shell: bash
          run: |
            cd /var/www
            apt -y install squashfs-tools
            linuxdeploy --appdir=./AppDir -e ./install/bin/assfonts -d ./src/resources/assfonts.desktop -i ./src/resources/icon.png --icon-filename=assfonts
            mksquashfs ./AppDir AppDir.squashfs -root-owned -noappend
            wget https://github.com/AppImage/AppImageKit/releases/download/continuous/runtime-aarch64
            cat runtime-aarch64 >> assfonts-${{ github.ref_name }}-aarch64-Linux.AppImage
            cat AppDir.squashfs >> assfonts-${{ github.ref_name }}-aarch64-Linux.AppImage

      - name: upload AppImages
        uses: actions/upload-artifact@v3
        with:
          name: release-appimage-${{ matrix.arch }}
          path: assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Linux.AppImage
          if-no-files-found: error

  build-windows:
    runs-on: windows-2022
    defaults:
      run:
        shell: cmd
    strategy:
      matrix:
        include:
          - { arch: x86_64, profile: x86_64 }
          # - { arch: aarch64, profile: armv8 }
    steps:
      - name: x86_64 install msvc
        if: ${{ matrix.arch == 'x86_64' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: arm64 install msvc
        if: ${{ matrix.arch == 'aarch64' }}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64

      - name: install cmake
        uses: lukka/get-cmake@latest

      - name: install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 2.0.4
      
      - name: checkout
        uses: actions/checkout@v3

      - name: build executable binary
        run: |
          conan config install ".github\conan2-windows"
          conan install . -b missing -pr:h ${{ matrix.profile }} -pr:b x86_64
          cd build
          .\conanbuild.bat
          cmake .. --preset conan-default
          cmake --build --preset conan-release -j
          cmake --install Release --prefix ..\install
          cd ..

      - name: copy and rename
        run: echo f | xcopy /f /y ".\install\bin\assfonts.exe" "assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Windows.exe"

      - name: upx compress
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Windows.exe
          args: -fq9

      - name: upload exe
        uses: actions/upload-artifact@v3
        with:
          name: release-exe-${{ matrix.arch }}
          path: assfonts-${{ github.ref_name }}-${{ matrix.arch }}-Windows.exe
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: [ build-linux, build-windows ]
    steps:
      - name: download AppImages x86_64
        uses: actions/download-artifact@v3
        with:
          name: release-appimage-x86_64
          
      - name: download AppImages aarch64
        uses: actions/download-artifact@v3
        with:
          name: release-appimage-aarch64

      - name: download exe x86_64
        uses: actions/download-artifact@v3
        with:
          name: release-exe-x86_64

      # - name: download exe aarch64
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: release-exe-aarch64

      - name: calculate hash
        run: |
          sha256sum assfonts-${{ github.ref_name }}-x86_64-Linux.AppImage > assfonts-${{ github.ref_name }}-x86_64-Linux.AppImage.sha256sum
          sha256sum assfonts-${{ github.ref_name }}-aarch64-Linux.AppImage > assfonts-${{ github.ref_name }}-aarch64-Linux.AppImage.sha256sum
          sha256sum assfonts-${{ github.ref_name }}-x86_64-Windows.exe > assfonts-${{ github.ref_name }}-x86_64-Windows.exe.sha256sum
          # sha256sum assfonts-${{ github.ref_name }}-aarch64-Windows.exe > assfonts-${{ github.ref_name }}-aarch64-Windows.exe.sha256sum

      - name: edit release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: assfonts-${{ github.ref_name }}-*
          tag: ${{ github.ref }}
          overwrite: false
          file_glob: true
